#	Makefile.in for splan/sortgrcd
#	Copyright(c) Osamu Gotoh <<gotoh.osamu.67a@st.kyoto-u.ac.jp>>

exec_prefix = /usr/local/bin
table_dir = /usr/local/bin
alndbs_dir = /db/seqdb
CXX  = g++
#CXX  = clang++
CFLAGS = -O3 -march=native
RANLIB = ranlib
LD  = g++
AR = ar ru
DEL = rm -f
DEFLT = -DM_THREAD=1

CXX := $(CXX) $(CFLAGS) $(DEFLT)

.SUFFIXES: .o .cc .h .sh

PROG_B = spaln sortgrcd makmdm makdbs
PROG_A = dvn exinpot kmers npssm rdn utn
PROG_F = fitild compild decompild plotild
PROG = $(PROG_B) $(PROG_A) $(PROG_F)

STDH = stdtype.h
CLIB = clib.a -lpthread -lm -lz
SLIB = sblib.a $(CLIB)
ULIB = ublib.a $(SLIB)

BINDIR = $(DESTDIR)$(exec_prefix)
TABDIR = $(DESTDIR)$(table_dir)
DBSDIR = $(DESTDIR)$(alndbs_dir)

.cc.o:
	$(CXX) -c $<

.cc:
	$(CXX) -o $@ $< $(CLIB)

basis: $(PROG_B)

all: $(PROG)

clean:
	$(DEL) $(PROG) *.exe
clear:
	$(DEL) $(PROG) *.exe *.o *.a
clearall:
	$(DEL) $(PROG) core *.o *.a *.exe *% *BAK Makefile iolib.h

install:
	test -d $(BINDIR) || mkdir -p $(BINDIR)
	if [ -s spaln ]; then\
	    cp $(PROG_B) $(BINDIR); \
	fi
	if [ -s exinpot ]; then \
	    cp $(PROG_A) $(BINDIR); \
	fi
	if [ -s fitild ]; then \
	    cp $(PROG_F) $(BINDIR); \
	fi
	test -d $(TABDIR) || mkdir -p $(TABDIR)
	@if test "$(TABDIR)" != "$(PWD)/../table"; then \
		cp -pfR ../table/* $(TABDIR); \
	fi
	./makmdm $(TABDIR)
	test -d $(DBSDIR) || mkdir -p $(DBSDIR)
	@if test "$(DBSDIR)" != "$(PWD)/../seqdb"; then \
		cp -pfR ../seqdb/????* $(DBSDIR); \
	fi

uninstall uninst:
	cd $(BINDIR)
	if [ -s spaln ]; then\
	    rm -f $(PROG_B)
	cd $(TABDIR); cd ..; rm -fr $(TABDIR)

test:   $(PROG)
	@if test -r $(TABDIR)/mdm_mtx; then \
	  ./test.sh; \
	else \
	   echo "please make install before test"; \
	fi

wc:
	wc $(SRC) $(HDR)
ls:
	ls $(SRC) $(HDR)

spaln:	spaln.cc blksrc.o sblib.a
	$(CXX) -o $@ spaln.cc blksrc.o $(SLIB) $(ILIB)
sortgrcd:	sortgrcd.cc sblib.a
	$(CXX) -o $@ sortgrcd.cc $(SLIB) $(ILIB)
makdbs: makdbs.cc dbs.h seq.h bitpat.h sblib.a
	$(CXX) -o $@ makdbs.cc $(SLIB) $(ILIB)
makmdm: makmdm.cc mdm.h clib.a
	$(CXX) -o $@ makmdm.cc $(CLIB) $(ILIB)

dvn:	dvn.cc autocomp.h ublib.a
	$(CXX) -o $@ dvn.cc $(ULIB) $(ILIB)
exinpot: exinpot.cc codepot.h utilseq.h eijunc.h sblib.a
	$(CXX) -o $@ exinpot.cc $(SLIB) $(ILIB)
kmers: kmers.cc sblib.a
	$(CXX) -o $@ kmers.cc $(SLIB) $(ILIB)
npssm:	npssm.cc sblib.a
	$(CXX) -o $@ npssm.cc $(SLIB) $(ILIB)
rdn:	rdn.cc 	ublib.a
	$(CXX) -o $@ rdn.cc $(ULIB) $(ILIB)
utn:	utn.o ublib.a
	$(CXX) -o $@ utn.o $(ULIB) $(ILIB)

compild: compild.cc calcserv.h ildpdf.o clib.a
	$(CXX) -o compild compild.cc ildpdf.o $(CLIB) -lm -lgsl -lgslcblas
decompild: decompild.o ildpdf.o fitild.o clib.a
	$(CXX) -o decompild decompild.o ildpdf.o fitild.o $(CLIB) -lgsl -lgslcblas
fitild: fitild.cc ildpdf.o clib.a
	$(CXX) -o $@  -DMAIN fitild.cc ildpdf.o $(CLIB) \
	-L/usr/local/lib -lm -lgsl -lgslcblas
plotild: plotild.cc ildpdf.o clib.a
	$(CXX) -o plotild plotild.cc ildpdf.o $(CLIB) -lm -lgsl -lgslcblas

clib.o:		clib.cc		stdtype.h
iolib.o:	iolib.cc	stdtype.h
mfile.o:	mfile.cc	stdtype.h
sets.o:		sets.cc		stdtype.h
supprime.o:	supprime.cc	stdtype.h

clib.a: clib.o iolib.o mfile.o sets.o supprime.o 
	$(AR) clib.a clib.o iolib.o mfile.o sets.o supprime.o 
	$(RANLIB) clib.a

aln2.o:	aln2.cc	seq.h aln.h
bitpat.o: bitpat.cc bitpat.h
blksrc.o: blksrc.cc seq.h aln.h utilseq.h blksrc.h
boyer_moore.o: boyer_moore.h boyer_moore.cc
codepot.o:	codepot.cc	codepot.h
dbs.o:	dbs.cc dbs.h $(STDH)
divseq.o:	divseq.cc	aln.h
eijunc.o:	eijunc.cc	eijunc.h	seq.h
fwd2b1.o: fwd2b1.cc aln.h vmf.h wln.h boyer_moore.h udh_intermediate.h \
	rhomb_coord.h simd_functions.h fwd2s1_simd.h fwd2s1_wip_simd.h
fwd2d1.o: fwd2d1.cc aln.h vmf.h wln.h boyer_moore.h
fwd2h1.o: fwd2h1.cc aln.h wln.h vmf.h boyer_moore.h udh_intermediate.h \
	rhomb_coord.h simd_functions.h fwd2h1_simd.h fwd2h1_wip_simd.h
fwd2s1.o: fwd2s1.cc aln.h wln.h vmf.h boyer_moore.h udh_intermediate.h \
	rhomb_coord.h simd_functions.h fwd2s1_simd.h fwd2s1_wip_simd.h
gaps.o:	    gaps.cc  gaps.h  seq.h
gsinfo.o:	gsinfo.cc	seq.h
seq.o:	seq.cc	seq.h		aln.h	dbs.h
simmtx.o:	simmtx.cc seq.h aln.h mdm.h
sqpr.o:	sqpr.cc	seq.h		dbs.h
utilseq.o:	utilseq.cc	seq.h
vmf.o:	vmf.cc vmf.h $(STDH)
wln.o:	wln.cc	seq.h	    aln.h	wln.h

sblib.a: aln2.o dbs.o gaps.o  codepot.o divseq.o gsinfo.o \
	fwd2b1.o fwd2d1.o fwd2h1.o fwd2s1.o bitpat.o eijunc.o \
	seq.o simmtx.o sqpr.o utilseq.o vmf.o wln.o boyer_moore.o
	$(AR) sblib.a aln2.o dbs.o gaps.o  codepot.o divseq.o gsinfo.o \
	fwd2b1.o fwd2d1.o fwd2h1.o fwd2s1.o bitpat.o eijunc.o \
	seq.o simmtx.o sqpr.o utilseq.o vmf.o wln.o boyer_moore.o
	$(RANLIB) sblib.a

autocomp.h:	calcserv.h
autocomp.o: autocomp.cc autocomp.h $(STDH)
extcds.o: extcds.cc seq.h dbs.h extcds.h
montseq.o: montseq.cc seq.h
pattern.o: pattern.cc pattern.h
resite.o: resite.cc resite.h pattern.h seq.h

ublib.a: autocomp.o extcds.o montseq.o pattern.o resite.o
	$(AR) ublib.a autocomp.o extcds.o \
	montseq.o pattern.o resite.o
	$(RANLIB) ublib.a

cmn.h:	$(STDH) 
	touch cmn.h
seq.h:	$(STDH)
	touch seq.h
